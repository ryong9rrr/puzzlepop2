name: Docker Build & Deploy

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 실행

jobs:
  build_and_push:
    runs-on: ubuntu-22.04-arm

    steps:
      - name: 코드 가져오기
        uses: actions/checkout@v4

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: rest-server Docker 이미지 빌드 & 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/puzzlepop2:rest-server -f apps/rest-server/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/puzzlepop2:rest-server

      - name: game-server Docker 이미지 빌드 & 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/puzzlepop2:game-server -f apps/game-server/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/puzzlepop2:game-server

      - name: web Docker 이미지 빌드 & 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/puzzlepop2:web -f apps/web/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/puzzlepop2:web

  deploy:
    runs-on: ubuntu-22.04-arm
    needs: build_and_push

    steps:
      - name: 가상머신 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo su - <<EOF
            cd /root/puzzlepop2
            docker-compose down
            docker rmi ${{ secrets.DOCKER_USERNAME }}/puzzlepop2:rest-server || true
            docker rmi ${{ secrets.DOCKER_USERNAME }}/puzzlepop2:game-server || true
            docker rmi ${{ secrets.DOCKER_USERNAME }}/puzzlepop2:web || true
            docker-compose pull
            docker-compose up -d --remove-orphans
            docker image prune -f

            sudo chmod 777 /var/www/cdn
            EOF
