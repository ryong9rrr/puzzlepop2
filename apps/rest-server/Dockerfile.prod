# ARM64 아키텍처용 Node.js 이미지를 사용합니다.
FROM arm64v8/node:20-alpine AS base

# 빌드 단계: 의존성 설치 및 준비
FROM base AS builder
# libc6-compat이 필요할 수 있는 경우 추가
RUN apk update
RUN apk add --no-cache libc6-compat
# 작업 디렉토리 설정
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune rest-server --docker

# 종속성 설치 단계
FROM base AS installer
RUN apk update
RUN apk add --no-cache libc6-compat
WORKDIR /app

# 의존성 설치 (변경이 덜 자주 일어나므로 먼저 설치)
COPY --from=builder /app/out/json/ .
RUN yarn install

# 프로젝트 빌드 및 종속성 복사
COPY --from=builder /app/out/full/ .

# 원격 캐싱을 사용하려면 아래 주석을 해제하고 build args 추가
# ARG TURBO_TEAM
# ENV TURBO_TEAM=$TURBO_TEAM

# ARG TURBO_TOKEN
# ENV TURBO_TOKEN=$TURBO_TOKEN

RUN yarn turbo build

# 실행 단계
FROM base AS runner
WORKDIR /app

# production을 root로 실행하지 않기 위해 사용자 추가
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nestjs
USER nestjs
COPY --from=installer /app .

# 포트 노출
EXPOSE 8080

# 앱 실행
CMD node apps/rest-server/dist/main.js
